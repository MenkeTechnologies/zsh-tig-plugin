#!/usr/bin/env zsh
# -*- mode: sh; sh-indentation: 4; indent-tabs-mode: nil; sh-basic-offset: 4; -*-
#
# Copyright (c) 2019 Sebastian Gniazdowski

# Run as script?
if [[ "$0" != zsh_tig_plugin_update || -n "$ZSH_SCRIPT" ]]; then
    # Handle $0 according to the Zsh Plugin Standard:
    # http://zdharma.org/Zsh-100-Commits-Club/Zsh-Plugin-Standard.html
    0=${${ZERO:-${0:#$ZSH_ARGZERO}}:-${(%):-%N}}
    0=${${(M)0##/*}:-$PWD/$0}
    [[ -d ${0:h} && -f ${0:h}/zsh_tig_plugin_update ]] && local ZSH_TIG_DIR=${0:h}
fi

[[ ! -d $ZSH_TIG_DIR || ! -f $ZSH_TIG_DIR/zsh_tig_plugin_update ]] && {
    print -P "%F{160}Couldn't determine plugin's directory" \
            "(got: \`$ZSH_TIG_DIR')%f"
    return 1
}

emulate -LR zsh -o extended_glob -o warn_create_global -o typeset_silent \
        -o no_short_loops -o rc_quotes -o no_auto_pushd

local orig
if [[ -n $TIGRC_USER ]] {
    orig=$TIGRC_USER
} elif [[ -f ~/.tigrc ]] {
    orig=~/.tigrc
} elif [[ -f ${XDG_CONFIG_HOME:-$HOME/.config}/tig/config ]] {
    orig=${XDG_CONFIG_HOME:-$HOME/.config}/tig/config
}

[[ -n $orig && ! -r $orig ]] && {
    print -P "%F{160}The tig config file \`%F{141}$orig%F{160}' doesn't" \
            "exist or isn't readable%f"
    return 1
}

command rm -f $ZSH_TIG_DIR/tigrc
if [[ -n $orig ]] {
    command cp $orig $ZSH_TIG_DIR/tigrc
}

command cat $ZSH_TIG_DIR/tigrc_extension >>! $ZSH_TIG_DIR/tigrc

(( !$? )) && \
    { print -P "%F{141}Successfully updated the custom tigrc%f"; ((1)); } || \
    print -P "%F{160}There was a problem creating the custom tigrc" \
        "(detected plugin directory: %F{141}${ZSH_TIG_DIR%/.}%F{160})%f"

